1)	Macro Pass-1

----------------------------------------arglist.java-----------------------------------------------------------------
package macroPass1;
public class arglist {
String argname;
arglist(String argument) {
// TODO Auto-generated constructor stub
this.argname=argument;
}
}

---------------------------------------mdt.java---------------------------------------------------------
package macroPass1;
public class mdt {
String stmnt;
public mdt() {
// TODO Auto-generated constructor stub
stmnt="";
}
}

--------------------------------------mnt.java--------------------------------------------------
package macroPass1;
public class mnt {
String name;
int addr;
int arg_cnt;
mnt(String nm, int address)
{
this.name=nm;
this.addr=address;
this.arg_cnt=0;
}
}

-----------------------------------macroPass1.java----------------------------------------------
package macroPass1;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
public class macroPass1 {
public static void main(String[] args) throws IOException {
// TODO Auto-generated method stub
BufferedReader br1=new BufferedReader(new FileReader("C:\\Users\\Admin\\eclipse-workspace\\macroPass1\\src\\input.txt"));
String line;
mdt[] MDT=new mdt[20];
mnt[] MNT=new mnt[4];
arglist[] ARGLIST = new arglist[10]; 
boolean macro_start=false,macro_end=false,fill_arglist=false;
int mdt_cnt=0,mnt_cnt=0,arglist_cnt=0;
while((line = br1.readLine())!=null)
{
line=line.replaceAll(",", " ");
String[] tokens=line.split("\\s+");
MDT[mdt_cnt] = new mdt();
String stmnt = "";
for(int i=0;i<tokens.length;i++)
{
if(tokens[i].equalsIgnoreCase("mend"))
{
MDT[mdt_cnt++].stmnt = "\t"+tokens[i];
macro_end = true;
}
if(tokens[i].equalsIgnoreCase("macro"))
{
macro_start = true;
macro_end = false;
}
else if(!macro_end)
{
if(macro_start)
{
MNT[mnt_cnt++]=new mnt(tokens[i],mdt_cnt);
macro_start=false;
fill_arglist=true;
}
if(fill_arglist)
{
while(i<tokens.length)
{
MDT[mdt_cnt].stmnt = MDT[mdt_cnt].stmnt+ "\t" + tokens[i];
stmnt = stmnt +"\t"+ tokens[i];
if(tokens[i].matches("&[a-zA-Z]+")||tokens[i].matches("&[a-zA-Z]+[0-9]+"))
ARGLIST[arglist_cnt++]=new arglist(tokens[i]);
i++;
}
fill_arglist=false;
}
else
{
if(tokens[i].matches("[a-zA-Z]+") || tokens[i].matches("[a-zA-Z]+[0-9]+")||tokens[i].matches("[0-9]+"))
{
MDT[mdt_cnt].stmnt = MDT[mdt_cnt].stmnt+ "\t" + tokens[i];
stmnt = stmnt +"\t"+ tokens[i];
}
if(tokens[i].matches("&[a-zA-Z]+") || tokens[i].matches("&[a-zA-Z]+[0-9]+"))
{
for(int j=0;j<arglist_cnt;j++)
if(tokens[i].equals(ARGLIST[j].argname))
{
MDT[mdt_cnt].stmnt = MDT[mdt_cnt].stmnt + "\t#"+(j+1);
stmnt = stmnt +"\t#"+(j+1);
}
}
}
}
}
if(stmnt!="" && !macro_end)
mdt_cnt++;
}
br1.close();
BufferedWriter bw1=new BufferedWriter(new FileWriter("C:\\Users\\Admin\\eclipse-workspace\\macroPass1\\src\\mnt.txt"));
System.out.println("\n\t********MACRO NAME TABLE**********");
System.out.println("\n\tINDEX\tNAME\tADDRESS");
for(int i=0;i<mnt_cnt;i++)
{
System.out.println("\t"+i+"\t"+MNT[i].name+"\t"+MNT[i].addr);
bw1.write(MNT[i].name+"\t"+MNT[i].addr+"\n");
}
bw1.close();
bw1=new BufferedWriter(new FileWriter("C:\\Users\\Admin\\eclipse-workspace\\macroPass1\\src\\arglist.txt"));
System.out.println("\n\n\t********ARGUMENT LIST**********");
System.out.println("\n\tINDEX\tNAME\tADDRESS");
for(int i=0;i<arglist_cnt;i++)
{
System.out.println("\t"+i+"\t"+ARGLIST[i].argname);
bw1.write(ARGLIST[i].argname+"\n");
}
bw1.close();
System.out.println("\n\t********MACRO DEFINITION TABLE**********");
System.out.println("\n\tINDEX\t\tSTATEMENT");
bw1=new BufferedWriter(new FileWriter("C:\\Users\\Admin\\eclipse-workspace\\macroPass1\\src\\mdt.txt"));
for(int i=0;i<mdt_cnt;i++)
{
System.out.println("\t"+i+"\t"+MDT[i].stmnt);
bw1.write(MDT[i].stmnt+"\n");
}
bw1.close();
}
}

---------------------------------------------input.txt-------------------------------------------------
MACRO
INCR &X,&Y,&REG1 = AREG
MOVER &REG1,&X
ADD &REG1,&Y
MOVEM &REG1,&X
MEND
MACRO
DECR &A,&B,&REG2 = BREG
MOVER &REG2,&A
SUB &REG2,&B
MOVEM &REG2,&A
MEND
START 100
READ N1
READ N2
DECR N1,N2
INCR N1,N2
STOP
N1 DS 1
N2 DS 2
END
--------------------------------------------------------------------------------------------------------
                                                      Output

----------------------------------------------------arglist.txt----------------------------------------------

&X
&Y
&REG1
&A
&B
&REG2

-----------------------------------------------------mdt.txt--------------------------------------------------------

	INCR	&X	&Y	&REG1	=	AREG
	MOVER	#3	#1
	ADD	#3	#2
	MOVEM	#3	#1
	MEND
	DECR	&A	&B	&REG2	=	BREG
	MOVER	#6	#4
	SUB	#6	#5
	MOVEM	#6	#4
	MEND

-----------------------------------------------------mnt.txt-------------------------------------------------------------

INCR	0
DECR	5