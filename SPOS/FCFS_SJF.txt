7)	"Write a program to simulate CPU Scheduling Algorithms: FCFS, SJF (Preemptive)
	Process    AT                 BT
	P1             10                  2
	P2             0                    10
	P3             8                    4
	P4             5                    5
	"


FCFS(NonPremp):


package SPOSpkg;

import java.util.*;
public class FCFS_NonPremp 
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter no. of process: ");
		int n=sc.nextInt();
		int pid[]=new int[n];
		int at[]=new int[n];
		int bt[]=new int[n];
		int ct[]=new int[n];
		int tat[]=new int[n];
		int wt[]=new int[n];
		int temp;
		float avg_wt=0,avg_tat=0;
 
		for(int i=0; i<n; i++)
		{
			System.out.println("Enter arrival time of process " +(i+1)+ ":");
			at[i]=sc.nextInt();
			System.out.println("Enter burst time of process " +(i+1)+ ":");
			bt[i]=sc.nextInt();
			pid[i]=i+1;
		}
 
		for(int i=0 ; i<n; i++)
		{
			for(int j=0;  j< n-(i+1) ; j++)
			{
				if(at[j] > at[j+1] )
				{
					temp = at[j];
					at[j] = at[j+1];
					at[j+1] = temp;
					temp = bt[j];
					bt[j] = bt[j+1];
					bt[j+1] = temp;
					temp = pid[j];
					pid[j] = pid[j+1];
					pid[j+1] = temp;
				}
			}
		}
		
		for(int i=0 ; i<n; i++)
		{
			if( i == 0)
			{	
				ct[i]= at[i]+bt[i];
			}
			else
			{
				if( at[i]>ct[i-1])
				{
					ct[i]= at[i] +bt[i];
				}
				else
					ct[i]= ct[i-1] +bt[i];
			}
			tat[i] = ct[i] - at[i] ;
			wt[i] = tat[i] - bt[i] ;
			avg_wt += wt[i] ;
			avg_tat += tat[i] ;
		}
		
		System.out.println("Pid\tAT\tBT\tCT\tTAT\tWT\n");
		for(int i=0 ; i<n; i++)
		{
			System.out.println(pid[i] + "  \t " + at[i] + "\t" + bt[i] + "\t" + ct[i] + "\t" + tat[i] + "\t"  + wt[i] ) ;
		}
		System.out.println("\nAverage TAT (turn around time) :"+(avg_tat/n));
		System.out.println("\nAverage WT (waiting time) : "+ (avg_wt/n));
		
		sc.close();
	}
	
}


SJF(Premp):


package SPOSpkg;
import java.util.*;

public class SJF_Preemp {
	
    public static void main (String args[])
	{
	Scanner sc=new Scanner(System.in);
	System.out.println ("enter no of process:");
	int n= sc.nextInt();
	int pid[] = new int[n]; // it takes pid of process
	int at[] = new int[n]; // at means arrival time
	int bt[] = new int[n]; // bt means burst time
	int ct[] = new int[n]; // ct means complete time
	int ta[] = new int[n];// ta means turn around time
	int wt[] = new int[n];  // wt means waiting time
	int f[] = new int[n];  // f means it is flag it checks process is completed or not
	int k[]= new int[n];   // it is also stores brust time
	    int i, st=0, tot=0;
	    float avgwt=0, avgta=0;

	    for (i=0;i<n;i++)
	    {
	     pid[i]= i+1;
	     System.out.println ("enter process " +(i+1)+ " arrival time:");
	     at[i]= sc.nextInt();
	     System.out.println("enter process " +(i+1)+ " burst time:");
	     bt[i]= sc.nextInt();
	     k[i]= bt[i];
	     f[i]= 0;
	    }

	    while(true){
	     int min=99,c=n;
	     if (tot==n)
	     break;

	     for ( i=0;i<n;i++)
	     {
	     if ((at[i]<=st) && (f[i]==0) && (bt[i]<min))
	     {
	     min=bt[i];
	     c=i;
	     }
	     }

	     if (c==n)
	     st++;
	     else
	     {
	     bt[c]--;
	     st++;
	     if (bt[c]==0)
	     {
	     ct[c]= st;
	     f[c]=1;
	     tot++;
	     }
	     }
	    }

	    for(i=0;i<n;i++)
	    {
	     ta[i] = ct[i] - at[i];
	     wt[i] = ta[i] - k[i];
	     avgwt+= wt[i];
	     avgta+= ta[i];
	    }

	    System.out.println("pid  arrival  burst  complete turn waiting");
	    for(i=0;i<n;i++)
	    {
	     System.out.println(pid[i] +"\t"+ at[i]+"\t"+ k[i] +"\t"+ ct[i]+"\t"+ ta[i] +"\t"+ wt[i]);
	    }

	    System.out.println("\naverage tat is "+ (float)(avgta/n));
	    System.out.println("average wt is "+ (float)(avgwt/n));
	    sc.close();
	}
	}
